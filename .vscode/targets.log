make all --print-data-base --no-builtin-variables --no-builtin-rules --question
# GNU Make 4.2.1
# Built for x86_64-pc-linux-gnu
# Copyright (C) 1988-2016 Free Software Foundation, Inc.
# License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
# This is free software: you are free to change and redistribute it.
# There is NO WARRANTY, to the extent permitted by law.

# Make data base, printed on Sun Sep  4 10:23:02 2022

# Variables

# automatic
<D = $(patsubst %/,%,$(dir $<))
# automatic
?F = $(notdir $?)
# environment
WSLENV = ELECTRON_RUN_AS_NODE/w:
# default
.SHELLFLAGS := -c
# makefile (from 'avr_common/avr.mk', line 11)
AVRDUDE_PORT = /dev/ttyACM0    
# automatic
?D = $(patsubst %/,%,$(dir $?))
# automatic
@D = $(patsubst %/,%,$(dir $@))
# automatic
@F = $(notdir $@)
# makefile
CURDIR := /mnt/c/Users/pgb_2/Documents/GitHub/Progetto_SO_2022
# makefile
SHELL = /bin/sh
# environment
VSCODE_NLS_CONFIG = {"locale":"it","availableLanguages":{"*":"it"},"_languagePackId":"733e63a346861b85a80ab453548d8e7a.it","_translationsConfigFile":"/home/pigy/.vscode-server/data/clp/733e63a346861b85a80ab453548d8e7a.it/tcf.json","_cacheRoot":"/home/pigy/.vscode-server/data/clp/733e63a346861b85a80ab453548d8e7a.it","_resolvedLanguagePackCoreLocation":"/home/pigy/.vscode-server/data/clp/733e63a346861b85a80ab453548d8e7a.it/784b0177c56c607789f9638da7b6bf3230d47a8c","_corruptedFile":"/home/pigy/.vscode-server/data/clp/733e63a346861b85a80ab453548d8e7a.it/corrupted.info","_languagePackSupport":true}
# environment
_ = /mnt/c/Users/pgb_2/AppData/Local/Programs/Microsoft VS Code/bin/code
# makefile (from 'avr_common/avr.mk', line 19)
AVRDUDE_FLAGS = -p m2560 -P $(AVRDUDE_PORT) -c $(AVRDUDE_PROGRAMMER) -b 115200 $(AVRDUDE_NO_VERIFY) $(AVRDUDE_VERBOSE) $(AVRDUDE_ERASE_COUNTER) -D -q -V -C /usr/share/arduino/hardware/tools/avr/../avrdude.conf -c wiring
# makefile (from 'avr_common/avr.mk', line 1)
MAKEFILE_LIST :=  Makefile avr_common/avr.mk
# 'override' directive
GNUMAKEFLAGS := 
# environment
XDG_DATA_DIRS = /usr/local/share:/usr/share:/var/lib/snapd/desktop
# makefile (from 'avr_common/avr.mk', line 3)
AS = avr-gcc
# makefile (from 'Makefile', line 11)
OBJS = ./avr_common/uart.o
# environment
LESSOPEN = | /usr/bin/lesspipe %s
# environment
VSCODE_CWD = /mnt/c/Users/pgb_2/AppData/Local/Programs/Microsoft VS Code
# makefile (from 'avr_common/avr.mk', line 4)
INCLUDE_DIRS = -I. -I../avr_common
# default
MAKE_HOST := x86_64-pc-linux-gnu
# environment
PATH = /home/pigy/.vscode-server/bin/784b0177c56c607789f9638da7b6bf3230d47a8c/bin/remote-cli:/home/pigy/.local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/usr/lib/wsl/lib:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v11.7/libnvvp:/mnt/c/WINDOWS/system32:/mnt/c/WINDOWS:/mnt/c/WINDOWS/System32/Wbem:/mnt/c/WINDOWS/System32/WindowsPowerShell/v1.0/:/mnt/c/WINDOWS/System32/OpenSSH/:/mnt/c/Program Files/NVIDIA Corporation/NVIDIA NvDLISR:/mnt/c/Program Files/Docker/Docker/resources/bin:/mnt/c/ProgramData/DockerDesktop/version-bin:/mnt/c/Program Files/nodejs/:/mnt/c/Program Files/Git/cmd:/mnt/c/Program Files (x86)/Yarn/bin/:/mnt/c/Program Files/usbipd-win/:/mnt/c/Program Files/NVIDIA Corporation/Nsight Compute 2022.2.1/:/mnt/c/Program Files (x86)/NVIDIA Corporation/PhysX/Common:/mnt/c/Program Files/Microsoft SQL Server/150/Tools/Binn/:/mnt/c/Program Files/Microsoft SQL Server/Client SDK/ODBC/170/Tools/Binn/:/mnt/c/Program Files/dotnet/:/mnt/c/Program Files/ffmpeg-5.1-essentials_build/bin:/mnt/c/Users/pgb_2/AppData/Local/Programs/Python/Python36/:/mnt/c/Users/pgb_2/anaconda3:/mnt/c/Users/pgb_2/anaconda3/Library/mingw-w64/bin:/mnt/c/Users/pgb_2/anaconda3/Library/usr/bin:/mnt/c/Users/pgb_2/anaconda3/Library/bin:/mnt/c/Users/pgb_2/anaconda3/Scripts:/mnt/c/Python34/Scripts:/mnt/c/Users/pgb_2/AppData/Local/Programs/Microsoft VS Code/bin:/mnt/c/Users/pgb_2/AppData/Local/GitHubDesktop/bin:/mnt/c/xampp/php:/mnt/c/Users/pgb_2/AppData/Roaming/npm:/mnt/c/Users/pgb_2/AppData/Local/Yarn/bin:/mnt/c/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v10.1:/mnt/c/Python34:/mnt/c/Users/pgb_2/.dotnet/tools:/snap/bin
# environment
XDG_RUNTIME_DIR = /mnt/wslg/runtime-dir
# makefile (from 'avr_common/avr.mk', line 8)
AVRDUDE = avrdude
# environment
ELECTRON_RUN_AS_NODE = 1
# environment
VSCODE_IPC_HOOK_CLI = /mnt/wslg/runtime-dir/vscode-ipc-31c3dd0c-e9a3-4930-a5af-d6c1c67f55a5.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# automatic
%F = $(notdir $%)
# environment
DISPLAY = :0
# environment
PWD = /mnt/c/Users/pgb_2/Documents/GitHub/Progetto_SO_2022
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/442_interop
# environment
PULSE_SERVER = /mnt/wslg/PulseServer
# environment
VSCODE_AMD_ENTRYPOINT = vs/workbench/api/node/extensionHostProcess
# environment
HOME = /home/pigy
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
LOGNAME = pigy
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = 1
# makefile (from 'Makefile', line 14)
HEADERS = ./avr_common/uart.h
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# makefile (from 'avr_common/avr.mk', line 6)
AS_OPTS = -x assembler-with-cpp $(CC_OPTS)
# environment
SHLVL = 1
# makefile (from 'avr_common/avr.mk', line 5)
CC_OPTS = -Wall --std=gnu99 -DF_CPU=16000000UL -O3 -funsigned-char -mmcu=atmega2560 $(INCLUDE_DIRS)  -D__AVR_3_BYTE_PC__ -Wl,-u,vfprintf -lprintf_flt -lm
# makefile (from 'avr_common/avr.mk', line 2)
CC = avr-gcc
# default
MAKE_VERSION := 4.2.1
# environment
USER = pigy
# makefile
.DEFAULT_GOAL := all
# environment
NAME = Code
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'avr_common/avr.mk', line 13)
AVRDUDE_WRITE_FLASH = -U flash:w:$(TARGET):i
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/pgb_2/.vscode/extensions/ms-vscode-remote.remote-wsl-0.66.3
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# makefile (from 'Makefile', line 7)
BINS = progetto.elf
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# environment
VSCODE_HANDLES_SIGPIPE = true
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# environment
LC_ALL = C
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# environment
WAYLAND_DISPLAY = wayland-0
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# default
.RECIPEPREFIX := 
# environment
LANG = C
# environment
TERM = xterm-256color
# environment
WSL_DISTRO_NAME = Ubuntu
# variable set hash-table stats:
# Load=79/1024=8%, Rehash=0, Collisions=9/119=8%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 65, inode 844424930264742): 15 files, no impossibilities.
# avr_common (device 65, inode 1688849860479703): 4 files, no impossibilities so far.

# 19 files, no impossibilities in 2 directories.

# Implicit Rules

%.o: %.c
#  recipe to execute (from 'avr_common/avr.mk', line 27):
	$(CC) $(CC_OPTS) -c  -o $@ $<

%.o: %.s
#  recipe to execute (from 'avr_common/avr.mk', line 30):
	$(AS) $(AS_OPTS) -c  -o $@ $<

%.elf: %.o avr_common/uart.o
#  recipe to execute (from 'avr_common/avr.mk', line 33):
	$(CC) $(CC_OPTS) -o $@ $< $(OBJS) $(LIBS)

%.hex: %.elf
#  recipe to execute (from 'avr_common/avr.mk', line 37):
	avr-objcopy -O ihex -R .eeprom $< $@
	$(AVRDUDE) $(AVRDUDE_FLAGS) -U flash:w:$@:i #$(AVRDUDE_WRITE_EEPROM) 

# 4 implicit rules, 0 (0.0%) terminal.

# Files

progetto.o: progetto.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'progetto'
#  File is an intermediate prerequisite.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'avr_common/avr.mk', line 27):
	$(CC) $(CC_OPTS) -c  -o $@ $<

all: progetto.elf
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has been updated.
#  Successfully updated.

.phony: clean all
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

.SECONDARY: avr_common/uart.o
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

progetto.elf: progetto.o avr_common/uart.o
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'progetto'
#  Last modified 2022-09-04 10:21:55.370349
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'avr_common/avr.mk', line 33):
	$(CC) $(CC_OPTS) -o $@ $< $(OBJS) $(LIBS)

avr_common/uart.o: avr_common/uart.c
#  Implicit rule search has been done.
#  Implicit/static pattern stem: 'avr_common/uart'
#  Last modified 2022-09-04 10:21:55.2447962
#  File has been updated.
#  Successfully updated.
#  recipe to execute (from 'avr_common/avr.mk', line 27):
	$(CC) $(CC_OPTS) -c  -o $@ $<

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2022-09-04 10:12:44.7402256
#  File has been updated.
#  Successfully updated.

# Not a target:
progetto.c:
#  Implicit rule search has been done.
#  Last modified 2022-09-04 09:39:28.8067383
#  File has been updated.
#  Successfully updated.

# Not a target:
avr_common/uart.c:
#  Implicit rule search has been done.
#  Last modified 2022-08-22 10:11:57.5144198
#  File has been updated.
#  Successfully updated.

# Not a target:
 
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

clean:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'avr_common/avr.mk', line 41):
	rm -rf $(OBJS) $(BINS) *.hex *~ *.o

# Not a target:
avr_common/avr.mk:
#  Implicit rule search has been done.
#  Last modified 2022-08-16 19:11:28.1349814
#  File has been updated.
#  Successfully updated.

# files hash-table stats:
# Load=13/1024=1%, Rehash=0, Collisions=0/43=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 36 / storage = 347 B / avg = 9 B
# current buf: size = 8162 B / used = 347 B / count = 36 / avg = 9 B

# strcache performance: lookups = 64 / hit rate = 43%
# hash-table stats:
# Load=36/8192=0%, Rehash=0, Collisions=4/64=6%
# Finished Make data base on Sun Sep  4 10:23:02 2022

 
